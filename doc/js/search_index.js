var search_data = {"index":{"searchIndex":["activerecord","activesupport","agent","comp","defaulttest","file","game","object","sale","spreadsheet","excel","terminal","test","unit","testcase","yaml","compare_total_for()","create_compare_months_sheet()","create_compare_sheet()","create_inactive_sheets()","create_monthly_sheet()","create_remainder_sheet()","create_sales_per_city_sheet()","create_share_sheet()","create_top_terminals_sheet()","create_weekly_sheet()","get_sales()","last_day_of_month()","month_ago()","setup()","strunc()","teardown()","test_the_truth()","thou_sep()","year_ago()","gemfile","gemfile.lock","readme","rakefile","comp.gemspec","comp","comp.feature","by-game-type.sql","qry.sql"],"longSearchIndex":["activerecord","activesupport","agent","comp","defaulttest","file","game","object","sale","spreadsheet","spreadsheet::excel","terminal","test","test::unit","test::unit::testcase","yaml","comp::compare_total_for()","comp::create_compare_months_sheet()","comp::create_compare_sheet()","comp::create_inactive_sheets()","comp::create_monthly_sheet()","comp::create_remainder_sheet()","comp::create_sales_per_city_sheet()","comp::create_share_sheet()","comp::create_top_terminals_sheet()","comp::create_weekly_sheet()","comp::get_sales()","comp::last_day_of_month()","comp::month_ago()","defaulttest#setup()","object#strunc()","defaulttest#teardown()","defaulttest#test_the_truth()","object#thou_sep()","comp::year_ago()","","","","","","","","",""],"info":[["ActiveRecord","","ActiveRecord.html","",""],["ActiveSupport","","ActiveSupport.html","",""],["Agent","","Agent.html","",""],["Comp","","Comp.html","",""],["DefaultTest","","DefaultTest.html","",""],["File","","File.html","",""],["Game","","Game.html","",""],["Object","","Object.html","",""],["Sale","","Sale.html","",""],["Spreadsheet","","Spreadsheet.html","",""],["Spreadsheet::Excel","","Spreadsheet/Excel.html","",""],["Terminal","","Terminal.html","",""],["Test","","Test.html","",""],["Test::Unit","","Test/Unit.html","",""],["Test::Unit::TestCase","","Test/Unit/TestCase.html","","<p>Add test libraries you want to use here, e.g. mocha\n"],["YAML","","YAML.html","",""],["compare_total_for","Comp","Comp.html#method-c-compare_total_for","(sheet, sales, row, col)",""],["create_compare_months_sheet","Comp","Comp.html#method-c-create_compare_months_sheet","(book, day)","<p>Compare months sheet\n"],["create_compare_sheet","Comp","Comp.html#method-c-create_compare_sheet","(book, day)",""],["create_inactive_sheets","Comp","Comp.html#method-c-create_inactive_sheets","(book, day)","<p>Create sheets for inactive terminals  for instants games\n"],["create_monthly_sheet","Comp","Comp.html#method-c-create_monthly_sheet","(book, day)","<p>monthly sales\n"],["create_remainder_sheet","Comp","Comp.html#method-c-create_remainder_sheet","(book, day)","<p>Remainder sheet\n"],["create_sales_per_city_sheet","Comp","Comp.html#method-c-create_sales_per_city_sheet","(book, day)","<p>Create sheets for sales per city\n"],["create_share_sheet","Comp","Comp.html#method-c-create_share_sheet","(book, day)","<p>Share sheet\n"],["create_top_terminals_sheet","Comp","Comp.html#method-c-create_top_terminals_sheet","(book, day, opt = {})","<p>Create sheets for top terminal sales per game\n"],["create_weekly_sheet","Comp","Comp.html#method-c-create_weekly_sheet","(book, day)","<p>Weekly sales\n"],["get_sales","Comp","Comp.html#method-c-get_sales","(c)",""],["last_day_of_month","Comp","Comp.html#method-c-last_day_of_month","(d)","<p>return last day of month for given data\n"],["month_ago","Comp","Comp.html#method-c-month_ago","(period)","<p>Compare every 7th day\n"],["setup","DefaultTest","DefaultTest.html#method-i-setup","()",""],["strunc","Object","Object.html#method-i-strunc","(s, n)","<p>truncate string with given length\n"],["teardown","DefaultTest","DefaultTest.html#method-i-teardown","()",""],["test_the_truth","DefaultTest","DefaultTest.html#method-i-test_the_truth","()",""],["thou_sep","Object","Object.html#method-i-thou_sep","(n)","<p>thou separated\n"],["year_ago","Comp","Comp.html#method-c-year_ago","(period)",""],["Gemfile","","Gemfile.html","","<p>source &#39;rubygems.org&#39; gemspec\n"],["Gemfile.lock","","Gemfile_lock.html","","<p>PATH\n\n<pre>remote: .\nspecs:\n  comp (0.0.1)\n    activerecord\n    gli (= 2.13.4)\n    spreadsheet\n    sqlite3</pre>\n<p>GEM …\n"],["README","","README_rdoc.html","","<p>comp\n<p>Describe your project here\n<p>comp\n"],["Rakefile","","Rakefile.html","","<p>require &#39;rake/clean&#39; require &#39;rubygems&#39; require\n&#39;rubygems/package_task&#39; require …\n"],["comp.gemspec","","comp_gemspec.html","","<p># Ensure we require the local version and not one we might have installed\nalready require File.join( …\n"],["comp","","comp_rdoc.html","","<p>comp\n<p>Generate this with\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">comp</span> <span class=\"ruby-identifier\">rdoc</span>\n</pre>\n"],["comp.feature","","features/comp_feature.html","","<p>Feature: My bootstrapped app kinda works\n\n<pre>In order to get going on coding my awesome app\nI want to have ...</pre>\n"],["by-game-type.sql","","tmp/by-game-type_sql.html","","<p>SELECT\n\n<pre>s.fdom,\ns.game_type,\nSUM(s.sales) total_sales,\nSUM(s.qty)  total_qty</pre>\n<p>FROM (\n"],["qry.sql","","tmp/qry_sql.html","","<p>— DLM SELECT\n\n<pre>g.id                    AS game_id,\ng.name                  AS name,\nCASE \n  WHEN g.type ...</pre>\n"]]}}